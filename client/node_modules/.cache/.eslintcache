[{"/home/tankner/tamuhack-2024/tamuhack-2024/client/src/index.js":"1","/home/tankner/tamuhack-2024/tamuhack-2024/client/src/App.js":"2","/home/tankner/tamuhack-2024/tamuhack-2024/client/src/components/SearchPage.js":"3","/home/tankner/tamuhack-2024/tamuhack-2024/client/src/components/SettingsButton.js":"4"},{"size":197,"mtime":1706391412151,"results":"5","hashOfConfig":"6"},{"size":209,"mtime":1706413527290,"results":"7","hashOfConfig":"6"},{"size":3721,"mtime":1706413319200,"results":"8","hashOfConfig":"6"},{"size":1976,"mtime":1706413335770,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1sv0dfv",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"13"},"/home/tankner/tamuhack-2024/tamuhack-2024/client/src/index.js",[],[],[],"/home/tankner/tamuhack-2024/tamuhack-2024/client/src/App.js",[],[],"/home/tankner/tamuhack-2024/tamuhack-2024/client/src/components/SearchPage.js",["25"],[],"import React, { useState , useRef } from 'react';\nimport styled from 'styled-components';\nimport SettingsButton from './SettingsButton';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LogoSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 290px;\n  height: calc(100% - 560px);\n\n  img {\n    width: 400px;\n    height: 92px;\n    margin-top: auto;\n  }\n`;\n\nconst SearchSection = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst Form = styled.form``;\n\nconst Search = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0px 14px;\n  background: #fff;\n  border: 1px solid #dfe1e5;\n  box-shadow: none;\n  border-radius: 24px;\n  z-index: 3;\n  height: 44px;\n  margin: 0 auto;\n  max-width: 584px;\n`;\n\nconst ButtonSection = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 70px;\n  padding-top: 18px;\n  top: 53px;\n  z-index: 0;\n\n  button {\n    background-color: #f8f9fa;\n    border: 1px solid #f8f9fa;\n    border-radius: 4px;\n    color: #3c4043;\n    font-family: Roboto, arial, sans-serif;\n    font-size: 14px;\n    margin: 11px 4px;\n    padding: 20px 16px;\n    line-height: 27px;\n    height: 36px;\n    min-width: 60px;\n    text-align: center;\n    cursor: pointer;\n    user-select: none;\n  }\n`;\n\nconst SearchIcon = styled.span`\n  color: #9aa0a6;\n  height: 30px;\n  width: 30px;\n  padding-right: 10px;\n  display: flex;\n  align-items: center;\n\n  & svg {\n    fill: #9aa0a6;\n  }\n`;\n\nconst SearchInput = styled.input`\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n  height: 40px;\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  color: rgba(0, 0, 0, 0.87);\n  word-wrap: break-word;\n  outline: none;\n  -webkit-tap-highlight-color: transparent;\n  height: 34px;\n  font-size: 16px;\n`;\n\nconst EngineIcon = styled.div`\ndisplay: flex;\ncursor: pointer;\nalign-items: center;\nborder: 0;\n\n`;\n\n\n\nconst SearchPage = () => {\n\n  const [searchEngine, setSearchEngine] = useState('Google');\n  const handleSearchEngineChange = (newSearchEngine) => {\n    setSearchEngine(newSearchEngine);\n  };\n  let searchTerm = useRef();\n\n  const getLogoPath = (searchEngine) => {\n    // Assuming logos are in the public directory\n    return `${process.env.PUBLIC_URL}/${searchEngine.toLowerCase()}logo2.png`;\n  };\n\n  return (\n    <Container>\n      <LogoSection>\n        <img\n          // src='https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'\n          src = {`${process.env.PUBLIC_URL}/LUMOS.png`}\n          alt='google-logo'\n        />\n      </LogoSection>\n      <SearchSection>\n        <Form action='/' method='GET' role='search'>\n          <Search>\n            <SearchIcon>\n              <svg\n                focusable='false'\n                xmlns='http://www.w3.org/2000/svg'\n                viewBox='0 0 24 24'\n              >\n                <path d='M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z' />\n              </svg>\n            </SearchIcon>\n            <SearchInput type='text' /> \n            <EngineIcon>\n              <img\n                style={{ width: 20, height: 20 }} src={getLogoPath(searchEngine)} alt={`${searchEngine} Logo`}\n              />\n            </EngineIcon>\n          </Search>\n        </Form>\n        <ButtonSection>\n          <SettingsButton\n          searchEngine={searchEngine}\n          onSearchEngineChange={handleSearchEngineChange}/>\n        </ButtonSection>\n\n      </SearchSection>\n    </Container>\n  );\n};\n\nexport default SearchPage;\n","/home/tankner/tamuhack-2024/tamuhack-2024/client/src/components/SettingsButton.js",["26"],[],"import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Slider from '@mui/material/Slider';\n\nfunction SettingsButton({ searchEngine, onSearchEngineChange }) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    const handleSliderChange = (event, newValue) => {\n      // Convert slider value to corresponding search engine\n      const searchEngines = ['Google', 'Bing', 'Yahoo'];\n      const newSearchEngine = searchEngines[newValue];\n      \n      // Update the parent component state using onSearchEngineChange\n      onSearchEngineChange(newSearchEngine);\n    };\n  \n    return (\n      <div className=\"settings-button\">\n        <Button\n          onClick={handleClick}\n          aria-controls=\"dropdown-menu\"\n          aria-haspopup=\"true\"\n        >\n          Change Engine\n        </Button>\n        <Menu\n          id=\"dropdown-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {/* Use a Slider for selecting search engine */}\n          <MenuItem>\n            <div>\n              <p>   Select Search Engine   </p>\n              <Slider\n                value={['Google', 'Bing', 'Yahoo'].indexOf(searchEngine)}\n                onChange={handleSliderChange}\n                valueLabelDisplay=\"auto\"\n                step={1}\n                marks={[\n                  { value: 0, label: 'Google' },\n                  { value: 1, label: 'Bing' },\n                  { value: 2, label: 'Yahoo' },\n                ]}\n                min={0}\n                max={2}\n              />\n            </div>\n          </MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n  \n  export default SettingsButton;\n  ",{"ruleId":"27","severity":1,"message":"28","line":119,"column":7,"nodeType":"29","messageId":"30","endLine":119,"endColumn":17},{"ruleId":"27","severity":1,"message":"31","line":1,"column":17,"nodeType":"29","messageId":"30","endLine":1,"endColumn":25},"no-unused-vars","'searchTerm' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used."]