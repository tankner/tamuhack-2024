[{"C:\\Users\\baile\\Desktop\\code\\copy\\tamuhack-2024\\client\\src\\index.js":"1","C:\\Users\\baile\\Desktop\\code\\copy\\tamuhack-2024\\client\\src\\App.js":"2","C:\\Users\\baile\\Desktop\\code\\copy\\tamuhack-2024\\client\\src\\components\\SearchPage.js":"3","C:\\Users\\baile\\Desktop\\code\\copy\\tamuhack-2024\\client\\src\\components\\SettingsButton.js":"4"},{"size":207,"mtime":1706406636876,"results":"5","hashOfConfig":"6"},{"size":221,"mtime":1706414334193,"results":"7","hashOfConfig":"6"},{"size":4115,"mtime":1706416003834,"results":"8","hashOfConfig":"6"},{"size":2934,"mtime":1706415870718,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5w6p1g",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\baile\\Desktop\\code\\copy\\tamuhack-2024\\client\\src\\index.js",[],[],"C:\\Users\\baile\\Desktop\\code\\copy\\tamuhack-2024\\client\\src\\App.js",[],[],"C:\\Users\\baile\\Desktop\\code\\copy\\tamuhack-2024\\client\\src\\components\\SearchPage.js",[],[],"C:\\Users\\baile\\Desktop\\code\\copy\\tamuhack-2024\\client\\src\\components\\SettingsButton.js",["23","24"],[],"import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Slider from '@mui/material/Slider';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\n\r\nfunction SettingsButton({ searchEngine, onSearchEngineChange }) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n  \r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    const handleSliderChange = (event, newValue) => {\r\n      // Convert slider value to corresponding search engine\r\n      const searchEngines = ['Google', 'Bing', 'Yahoo'];\r\n      const newSearchEngine = searchEngines[newValue];\r\n      \r\n      // Update the parent component state using onSearchEngineChange\r\n      onSearchEngineChange(newSearchEngine);\r\n    };\r\n  \r\n    return (\r\n      <div className=\"settings-button\">\r\n        <Button\r\n          onClick={handleClick}\r\n          aria-controls=\"dropdown-menu\"\r\n          aria-haspopup=\"true\"\r\n        >\r\n          Change Engine\r\n        </Button>\r\n        <Menu\r\n          id=\"dropdown-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          {/* Use a Slider for selecting search engine */}\r\n          <MenuItem>\r\n            <div>\r\n              <p>   Select Search Engine   </p>\r\n              <FormControl>\r\n                <RadioGroup\r\n                  row\r\n                  aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                  name=\"row-radio-buttons-group\"\r\n                >\r\n                  <FormControlLabel value=\"h\" control={<Radio />} label=\"Google\" onChange={handleSliderChange}/>\r\n                  <FormControlLabel value=\"Bing\" control={<Radio />} label=\"Bing\" onChange={handleSliderChange}/>\r\n                  <FormControlLabel value=\"Yahoo\" control={<Radio />} label=\"Yahoo\" onChange={handleSliderChange}/>\r\n                </RadioGroup>\r\n              </FormControl>\r\n              <Slider\r\n                value={['Google', 'Bing', 'Yahoo'].indexOf(searchEngine)}\r\n                onChange={handleSliderChange}\r\n                valueLabelDisplay=\"auto\"\r\n                step={1}\r\n                marks={[\r\n                  { value: 0, label: 'Google' },\r\n                  { value: 1, label: 'Bing' },\r\n                  { value: 2, label: 'Yahoo' },\r\n                ]}\r\n                min={0}\r\n                max={2}\r\n              />\r\n            </div>\r\n          </MenuItem>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default SettingsButton;\r\n  ",{"ruleId":"25","severity":1,"message":"26","line":1,"column":17,"nodeType":"27","messageId":"28","endLine":1,"endColumn":25},{"ruleId":"25","severity":1,"message":"29","line":6,"column":8,"nodeType":"27","messageId":"28","endLine":6,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'FormLabel' is defined but never used."]