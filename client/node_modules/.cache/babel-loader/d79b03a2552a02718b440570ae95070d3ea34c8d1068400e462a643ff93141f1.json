{"ast":null,"code":"var _jsxFileName = \"/Users/eddiephillips/Downloads/tempdownloads/thack/tamuhack-2024/src/components/SettingsButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SettingsButton() {\n  _s();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchEngine, setSearchEngine] = useState('Google'); // Initial value is 'Google'\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleSliderChange = (event, newValue) => {\n    // Convert slider value to corresponding search engine\n    const searchEngines = ['Google', 'Bing', 'Yahoo'];\n    setSearchEngine(searchEngines[newValue]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-button\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      \"aria-controls\": \"dropdown-menu\",\n      \"aria-haspopup\": \"true\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"dropdown-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select Search Engine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            value: ['Google', 'Bing', 'Yahoo'].indexOf(searchEngine),\n            onChange: handleSliderChange,\n            valueLabelDisplay: \"auto\",\n            step: 1,\n            marks: [{\n              value: 0,\n              label: 'Google'\n            }, {\n              value: 1,\n              label: 'Bing'\n            }, {\n              value: 2,\n              label: 'Yahoo'\n            }],\n            min: 0,\n            max: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClose,\n        children: \"Option 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(SettingsButton, \"0YVYtqJEmwM0mttUQMN5SJV7P7M=\");\n_c = SettingsButton;\nexport default SettingsButton;\nvar _c;\n$RefreshReg$(_c, \"SettingsButton\");","map":{"version":3,"names":["React","useState","Button","Menu","MenuItem","Slider","jsxDEV","_jsxDEV","SettingsButton","_s","anchorEl","setAnchorEl","searchEngine","setSearchEngine","handleClick","event","currentTarget","handleClose","handleSliderChange","newValue","searchEngines","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","keepMounted","open","Boolean","onClose","value","indexOf","onChange","valueLabelDisplay","step","marks","label","min","max","_c","$RefreshReg$"],"sources":["/Users/eddiephillips/Downloads/tempdownloads/thack/tamuhack-2024/src/components/SettingsButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Slider from '@mui/material/Slider';\n\nfunction SettingsButton() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchEngine, setSearchEngine] = useState('Google'); // Initial value is 'Google'\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    // Convert slider value to corresponding search engine\n    const searchEngines = ['Google', 'Bing', 'Yahoo'];\n    setSearchEngine(searchEngines[newValue]);\n  };\n\n  return (\n    <div className=\"settings-button\">\n      <Button\n        onClick={handleClick}\n        aria-controls=\"dropdown-menu\"\n        aria-haspopup=\"true\"\n      >\n        Settings\n      </Button>\n      <Menu\n        id=\"dropdown-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {/* Use a Slider for selecting search engine */}\n        <MenuItem>\n          <div>\n            <p>Select Search Engine</p>\n            <Slider\n              value={['Google', 'Bing', 'Yahoo'].indexOf(searchEngine)}\n              onChange={handleSliderChange}\n              valueLabelDisplay=\"auto\"\n              step={1}\n              marks={[\n                { value: 0, label: 'Google' },\n                { value: 1, label: 'Bing' },\n                { value: 2, label: 'Yahoo' },\n              ]}\n              min={0}\n              max={2}\n            />\n          </div>\n        </MenuItem>\n        {/* Other menu items */}\n        <MenuItem onClick={handleClose}>Option 2</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n\nexport default SettingsButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}