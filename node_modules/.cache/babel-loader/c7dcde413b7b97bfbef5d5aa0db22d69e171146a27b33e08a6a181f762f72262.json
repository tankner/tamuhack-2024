{"ast":null,"code":"var _jsxFileName = \"/Users/eddiephillips/Downloads/tempdownloads/thack/tamuhack-2024/src/components/SettingsButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Slider from '@mui/material/Slider';\n\n// ... (imports)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SettingsButton({\n  searchEngine,\n  onSearchEngineChange\n}) {\n  _s();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleSliderChange = (event, newValue) => {\n    // Convert slider value to corresponding search engine\n    const searchEngines = ['Google', 'Bing', 'Yahoo'];\n    const newSearchEngine = searchEngines[newValue];\n\n    // Update the parent component state using onSearchEngineChange\n    onSearchEngineChange(newSearchEngine);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-button\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      \"aria-controls\": \"dropdown-menu\",\n      \"aria-haspopup\": \"true\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"dropdown-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"   Select Search Engine   \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            value: ['Google', 'Bing', 'Yahoo'].indexOf(searchEngine),\n            onChange: handleSliderChange,\n            valueLabelDisplay: \"auto\",\n            step: 1,\n            marks: [{\n              value: 0,\n              label: 'Google'\n            }, {\n              value: 1,\n              label: 'Bing'\n            }, {\n              value: 2,\n              label: 'Yahoo'\n            }],\n            min: 0,\n            max: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(SettingsButton, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n_c = SettingsButton;\nexport default SettingsButton;\nvar _c;\n$RefreshReg$(_c, \"SettingsButton\");","map":{"version":3,"names":["React","useState","Button","Menu","MenuItem","Slider","jsxDEV","_jsxDEV","SettingsButton","searchEngine","onSearchEngineChange","_s","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","handleSliderChange","newValue","searchEngines","newSearchEngine","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","keepMounted","open","Boolean","onClose","value","indexOf","onChange","valueLabelDisplay","step","marks","label","min","max","_c","$RefreshReg$"],"sources":["/Users/eddiephillips/Downloads/tempdownloads/thack/tamuhack-2024/src/components/SettingsButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Slider from '@mui/material/Slider';\n\n// ... (imports)\n\nfunction SettingsButton({ searchEngine, onSearchEngineChange }) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    const handleSliderChange = (event, newValue) => {\n      // Convert slider value to corresponding search engine\n      const searchEngines = ['Google', 'Bing', 'Yahoo'];\n      const newSearchEngine = searchEngines[newValue];\n      \n      // Update the parent component state using onSearchEngineChange\n      onSearchEngineChange(newSearchEngine);\n    };\n  \n    return (\n      <div className=\"settings-button\">\n        <Button\n          onClick={handleClick}\n          aria-controls=\"dropdown-menu\"\n          aria-haspopup=\"true\"\n        >\n          Settings\n        </Button>\n        <Menu\n          id=\"dropdown-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {/* Use a Slider for selecting search engine */}\n          <MenuItem>\n            <div>\n              <p>   Select Search Engine   </p>\n              <Slider\n                value={['Google', 'Bing', 'Yahoo'].indexOf(searchEngine)}\n                onChange={handleSliderChange}\n                valueLabelDisplay=\"auto\"\n                step={1}\n                marks={[\n                  { value: 0, label: 'Google' },\n                  { value: 1, label: 'Bing' },\n                  { value: 2, label: 'Yahoo' },\n                ]}\n                min={0}\n                max={2}\n              />\n            </div>\n          </MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n  \n  export default SettingsButton;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}